From 79f56259fe09eb67492714d505efc112a0e23777 Mon Sep 17 00:00:00 2001
From: Tao Yang <Tao.Yang1@nxp.com>
Date: Tue, 14 Mar 2023 13:13:59 +0800
Subject: [PATCH 2/3] REL_2.13.1_IMX93_PRC2_RC3_0: move structure to header

Signed-off-by: Tao Yang <Tao.Yang1@nxp.com>
---
 .../rpmsg_lite/lib/include/rpmsg_lite.h       | 40 ++++++++++++++++++-
 .../rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c    | 40 +------------------
 2 files changed, 40 insertions(+), 40 deletions(-)

diff --git a/middleware/multicore/rpmsg_lite/lib/include/rpmsg_lite.h b/middleware/multicore/rpmsg_lite/lib/include/rpmsg_lite.h
index f93a1c5..be19e62 100644
--- a/middleware/multicore/rpmsg_lite/lib/include/rpmsg_lite.h
+++ b/middleware/multicore/rpmsg_lite/lib/include/rpmsg_lite.h
@@ -2,7 +2,7 @@
  * Copyright (c) 2014, Mentor Graphics Corporation
  * Copyright (c) 2015 Xilinx, Inc.
  * Copyright (c) 2016 Freescale Semiconductor, Inc.
- * Copyright 2016-2022 NXP
+ * Copyright 2016-2023 NXP
  * Copyright 2021 ACRIOS Systems s.r.o.
  * All rights reserved.
  *
@@ -89,6 +89,44 @@ extern "C" {
 /* Init flags */
 #define RL_NO_FLAGS (0U)
 
+/* rpmsg_std_hdr contains a reserved field,
+ * this implementation of RPMSG uses this reserved
+ * field to hold the idx and totlen of the buffer
+ * not being returned to the vring in the receive
+ * callback function. This way, the no-copy API
+ * can use this field to return the buffer later.
+ */
+struct rpmsg_hdr_reserved
+{
+    uint16_t rfu; /* reserved for future usage */
+    uint16_t idx;
+};
+
+RL_PACKED_BEGIN
+/*!
+ * Common header for all rpmsg messages.
+ * Every message sent/received on the rpmsg bus begins with this header.
+ */
+struct rpmsg_std_hdr
+{
+    uint32_t src;                       /*!< source endpoint address */
+    uint32_t dst;                       /*!< destination endpoint address */
+    struct rpmsg_hdr_reserved reserved; /*!< reserved for future use */
+    uint16_t len;                       /*!< length of payload (in bytes) */
+    uint16_t flags;                     /*!< message flags */
+} RL_PACKED_END;
+
+RL_PACKED_BEGIN
+/*!
+ * Common message structure.
+ * Contains the header and the payload.
+ */
+struct rpmsg_std_msg
+{
+    struct rpmsg_std_hdr hdr; /*!< RPMsg message header */
+    uint8_t data[1];          /*!< bytes of message payload data */
+} RL_PACKED_END;
+
 /*! \typedef rl_ept_rx_cb_t
     \brief Receive callback function type.
 */
diff --git a/middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c b/middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c
index 37e05de..65abb97 100644
--- a/middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c
+++ b/middleware/multicore/rpmsg_lite/lib/rpmsg_lite/rpmsg_lite.c
@@ -2,7 +2,7 @@
  * Copyright (c) 2014, Mentor Graphics Corporation
  * Copyright (c) 2015 Xilinx, Inc.
  * Copyright (c) 2016 Freescale Semiconductor, Inc.
- * Copyright 2016-2022 NXP
+ * Copyright 2016-2023 NXP
  * Copyright 2021 ACRIOS Systems s.r.o.
  * All rights reserved.
  *
@@ -34,44 +34,6 @@
 #include "rpmsg_lite.h"
 #include "rpmsg_platform.h"
 
-/* rpmsg_std_hdr contains a reserved field,
- * this implementation of RPMSG uses this reserved
- * field to hold the idx and totlen of the buffer
- * not being returned to the vring in the receive
- * callback function. This way, the no-copy API
- * can use this field to return the buffer later.
- */
-struct rpmsg_hdr_reserved
-{
-    uint16_t rfu; /* reserved for future usage */
-    uint16_t idx;
-};
-
-RL_PACKED_BEGIN
-/*!
- * Common header for all rpmsg messages.
- * Every message sent/received on the rpmsg bus begins with this header.
- */
-struct rpmsg_std_hdr
-{
-    uint32_t src;                       /*!< source endpoint address */
-    uint32_t dst;                       /*!< destination endpoint address */
-    struct rpmsg_hdr_reserved reserved; /*!< reserved for future use */
-    uint16_t len;                       /*!< length of payload (in bytes) */
-    uint16_t flags;                     /*!< message flags */
-} RL_PACKED_END;
-
-RL_PACKED_BEGIN
-/*!
- * Common message structure.
- * Contains the header and the payload.
- */
-struct rpmsg_std_msg
-{
-    struct rpmsg_std_hdr hdr; /*!< RPMsg message header */
-    uint8_t data[1];          /*!< bytes of message payload data */
-} RL_PACKED_END;
-
 /* Interface which is used to interact with the virtqueue layer,
  * a different interface is used, when the local processor is the MASTER
  * and when it is the REMOTE.
-- 
2.25.1

